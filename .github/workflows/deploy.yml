name: Deploy to GitHub Pages

on:
  push:
    branches: [main]  # Se ejecutará cuando hagas push a la rama `main`
  workflow_dispatch:  # También puedes disparar este flujo manualmente desde la pestaña de Actions

permissions:
  contents: read  # Permite leer el contenido del repositorio
  pages: write  # Permite hacer el despliegue en GitHub Pages
  id-token: write  # Permite autenticarte para el despliegue

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
      - name: Install, build, and upload your site
        uses: withastro/action@v3
        with:
          # No necesitas especificar la opción `base` aquí, ya que no estás usando un subdirectorio
          # Si tienes algún `package-lock.json`, `yarn.lock`, etc., será detectado automáticamente
          # Puedes personalizar la versión de Node si es necesario, pero por defecto es la 20

  deploy:
    needs: build  # Asegura que se construya primero antes de desplegar
    runs-on: ubuntu-latest
    environment:
      name: github-pages  # La configuración del entorno (puedes dejarla como está)
      url: ${{ steps.deployment.outputs.page_url }}  # La URL pública de tu página desplegada
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          # Puedes especificar la rama `gh-pages` en caso de que no esté configurada automáticamente
          branch: gh-pages  # Asegúrate de que tu sitio se despliegue en la rama `gh-pages`
          folder: dist      # El folder donde Astro coloca la salida (generalmente `dist`)

